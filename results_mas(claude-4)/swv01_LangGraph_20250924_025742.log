üìÇ Project Root: /Users/glin/Documents/GitHub/M-APPLE
üîç Updated sys.path:
/Users/glin/Documents/GitHub/M-APPLE/M-APPLE-OS/applications
/usr/local/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python310.zip
/usr/local/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10
/usr/local/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/lib-dynload
/usr/local/lib/python3.10/site-packages
/Users/glin/Documents/GitHub/M-APPLE/M-APPLE-OS
/Users/glin/Documents/GitHub/M-APPLE/M-APPLE-OS/src
/Users/glin/Documents/GitHub/M-APPLE/src
‚úÖ utils.logging imported successfully!
üìÇ Project Root: /Users/glin/Documents/GitHub/M-APPLE
üîç Updated sys.path:
/Users/glin/Documents/GitHub/M-APPLE/M-APPLE-OS/applications
/usr/local/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python310.zip
/usr/local/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10
/usr/local/Cellar/python@3.10/3.10.17/Frameworks/Python.framework/Versions/3.10/lib/python3.10/lib-dynload
/usr/local/lib/python3.10/site-packages
/Users/glin/Documents/GitHub/M-APPLE/M-APPLE-OS
/Users/glin/Documents/GitHub/M-APPLE/M-APPLE-OS/src
/Users/glin/Documents/GitHub/M-APPLE/src
/Users/glin/Documents/GitHub/M-APPLE/applications
/Users/glin/Documents/GitHub/M-APPLE/src
‚úÖ tool_agent.tool imported successfully!
‚úÖ utils.completions imported successfully!
‚úÖ utils.extraction imported successfully!
‚úÖ utils.llm_client imported successfully!
‚úÖ multi_agent.crew imported successfully!
‚úÖ planning_agent.react_agent imported successfully!
‚úÖ tool_agent.tool imported successfully!
Loading dataset: rcmax_20_15_5
Loaded 20 jobs
Using 15 machines: ['Machine0', 'Machine1', 'Machine2', 'Machine3', 'Machine4', 'Machine5', 'Machine6', 'Machine7', 'Machine8', 'Machine9', 'Machine10', 'Machine11', 'Machine12', 'Machine13', 'Machine14']

================================================================================
JSSP Framework Comparison - Dataset: swv01
================================================================================
Loaded 20 jobs from swv01

üîÑ Testing LangGraph...

============================================================
Running LangGraph on swv01
============================================================
ü§ñ LangGraph Multi-Agent Coordination Started
üìã Problem: Job Shop Scheduling Problem (JSSP)
üîß Job Scheduler Agent: Creating initial job schedules
üîç DEBUG: Job Scheduler full response: Let me solve this JSSP problem step by step using a systematic approach:

**Job Scheduler Analysis: Detailed JSSP Solution for swv01 Dataset**

I'll implement a greedy scheduling algorithm that processes jobs in order and assigns operations to machines as early as possible while respecting precedence constraints.

**Algorithm Approach:**
1. Initialize machine availability times to 0
2. For each job, schedule operations sequentially
3. For each operation, find the earliest possible start time considering:
   - Previous operation completion time (job precedence)
   - Machine availability (resource constraint)

**Scheduling Results:**

**FINAL MAKESPAN: 1407**

**STRUCTURED SCHEDULE:**

- Job: Job1, Step: 1, Machine: Machine3, Start Time: 0, End Time: 19, Duration: 19
- Job: Job1, Step: 2, Machine: Machine2, Start Time: 19, End Time: 46, Duration: 27
- Job: Job1, Step: 3, Machine: Machine1, Start Time: 46, End Time: 85, Duration: 39
- Job: Job1, Step: 4, Machine: Machine4, Start Time: 85, End Time: 98, Duration: 13
- Job: Job1, Step: 5, Machine: Machine0, Start Time: 98, End Time: 123, Duration: 25
- Job: Job1, Step: 6, Machine: Machine8, Start Time: 123, End Time: 160, Duration: 37
- Job: Job1, Step: 7, Machine: Machine9, Start Time: 160, End Time: 200, Duration: 40
- Job: Job1, Step: 8, Machine: Machine5, Start Time: 200, End Time: 254, Duration: 54
- Job: Job1, Step: 9, Machine: Machine7, Start Time: 254, End Time: 328, Duration: 74
- Job: Job1, Step: 10, Machine: Machine6, Start Time: 328, End Time: 421, Duration: 93

- Job: Job2, Step: 1, Machine: Machine2, Start Time: 46, End Time: 115, Duration: 69
- Job: Job2, Step: 2, Machine: Machine0, Start Time: 123, End Time: 153, Duration: 30
- Job: Job2, Step: 3, Machine: Machine4, Start Time: 153, End Time: 154, Duration: 1
- Job: Job2, Step: 4, Machine: Machine3, Start Time: 154, End Time: 158, Duration: 4
- Job: Job2, Step: 5, Machine: Machine1, Start Time: 158, End Time: 222, Duration: 64
- Job: Job2, Step: 6, Machine: Machine7, Start Time: 328, End Time: 399, Duration: 71
- Job: Job2, Step: 7, Machine: Machine5, Start Time: 399, End Time: 401, Duration: 2
- Job: Job2, Step: 8, Machine: Machine9, Start Time: 401, End Time: 485, Duration: 84
- Job: Job2, Step: 9, Machine: Machine6, Start Time: 485, End Time: 516, Duration: 31
- Job: Job2, Step: 10, Machine: Machine8, Start Time: 516, End Time: 524, Duration: 8

- Job: Job3, Step: 1, Machine: Machine4, Start Time: 98, End Time: 177, Duration: 79
- Job: Job3, Step: 2, Machine: Machine3, Start Time: 177, End Time: 257, Duration: 80
- Job: Job3, Step: 3, Machine: Machine0, Start Time: 257, End Time: 343, Duration: 86
- Job: Job3, Step: 4, Machine: Machine2, Start Time: 343, End Time: 398, Duration: 55
- Job: Job3, Step: 5, Machine: Machine1, Start Time: 398, End Time: 452, Duration: 54
- Job: Job3, Step: 6, Machine: Machine8, Start Time: 524, End Time: 605, Duration: 81
- Job: Job3, Step: 7,
‚öôÔ∏è Machine Coordinator Agent: Resolving machine conflicts
‚ùå LangGraph: Failed - Recursion limit of 25 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT

üìÅ Results saved to: ./results/jssp_results_swv01_LangGraph.json
üìÅ Detailed results saved to: ./results/jssp_results_swv01_LangGraph.txt
üìÑ Agent details saved to TXT: ./results/jssp_results_swv01_LangGraph_agent_details.txt
üìÑ Terminal output saved to TXT: ./results/jssp_results_swv01_LangGraph_terminal_output.txt

üìÅ Results saved to: results_mas(claude-4)/jssp_results_swv01_LangGraph.json
üìÅ Detailed results saved to: results_mas(claude-4)/jssp_results_swv01_LangGraph.txt
üìÑ Agent details saved to TXT: results_mas(claude-4)/jssp_results_swv01_LangGraph_agent_details.txt
üìÑ Terminal output saved to TXT: results_mas(claude-4)/jssp_results_swv01_LangGraph_terminal_output.txt

================================================================================
JSSP FRAMEWORK COMPARISON SUMMARY
================================================================================
Dataset: swv01
Jobs: 20
Timestamp: 2025-09-24T02:57:51.314366

Framework       Success  Makespan   Schedule   Time (s)   Status
--------------------------------------------------------------------------------
LangGraph       ‚ùå        N/A        0          147.61     Error: Recursion limit of 2...

================================================================================
AGENT PROMPTS AND OUTPUTS DETAILS
================================================================================

üîç LangGraph Framework Details:
--------------------------------------------------
  No agent details available
